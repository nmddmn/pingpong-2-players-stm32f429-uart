/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/start_screen/StartViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

StartViewBase::StartViewBase() :
    buttonCallback(this, &StartViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_480X272_TRIANGULAR_DISCO_ID));
    scalableImage1.setPosition(0, 0, 320, 240);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    playButton.setXY(80, 73);
    playButton.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    playButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HTTR));
    playButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    playButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    playButton.setAction(buttonCallback);
    add(playButton);
}

StartViewBase::~StartViewBase()
{

}

void StartViewBase::setupScreen()
{

}

void StartViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playButton)
    {
        //handlePlayButton
        //When playButton clicked change screen to Game
        //Go to Game with no screen transition
        application().gotoGameScreenNoTransition();
    }
}
